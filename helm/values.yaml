global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

rasterCommon:
  useNodeAffinity: false
  ca:
    secretName: 'ssss'
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  serviceUrls:
    jobManager: http://localhost:8080
    mapproxyApi: http://localhost:8081
  storage:
    tilesStorageProvider: S3
    fs:
      ingestionSourcePvc:
        enabled: true
        name: ingestion-source-pvc
        subPath: ingestion-source
      internalPvc:
        enabled: true
        name: internal-pvc
        tilesSubPath: tiles
    s3:
      endpointUrl: "localhost:9000"
      tilesBucket: "tiles-dev"
      sslEnabled: false
      secretName: "ingestion-s3-secret"
  jobManagement:
    ingestion:
      new: 
        jobType: Ingestion_New
      update: 
        jobType: Ingestion_Update
    sync:
      incoming:
        JobType: "syncTarget"

authentication:
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""

# ====================================================================================================
# Local certificate files variables
# ====================================================================================================

local:
  certs:
    ca: "certs/ca.crt"
    ssl: "certs/openssl.cnf"
  s3:
    secret:
      create: false #use for stand alone testing, global s3 secret name should be provided for full deployment
      accessKeyId: ""
      secretAccessKey: ""
  fs:
    sources:
      useEmptyDir: false # for local standalone deployment only
    tiles:
      useEmptyDir: false # for local standalone deployment only


enabled: true
environment: development

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

image:
  repository: discrete-cleanup
  tag: 'latest'

cron:
  schedule:  '0 0 * * *'
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  restartPolicy: OnFailure

env:
  logLevel: info
  logPrettyPrintEnabled: false
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  fs:
    blacklist_sources: "test_dir"
  s3:
    maxRetries: 3
    apiVersion: 2006-03-01
  batchSize:
    discreteLayers: 10
    tiffDirectoryDeletion: 1
    tilesDeletion: 1000 #s3 default max limit is 10000 so larger batches will be caped to the s3 limit
  failedCleanupDelayDays:
    ingestion: 14
    sync: 14
  httpRetry:
    attempts: 3
    delay: exponential
    shouldResetTimeout: true
  cleanupTypes:
    failedIngestionTasks: true
    successfulIngestion: true
    failedIncomingSyncTasks: true

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

