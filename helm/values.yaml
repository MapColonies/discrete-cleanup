global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}
  useNodeAffinity: false
  ca:
    secretName: ''
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'
  serviceUrls:
    jobManager: ""
    mapproxyApi: ""
  storage:
    tilesStorageProvider: ""
    fs:
      ingestionSourcePvc:
        enabled: false
        name: ""
        subPath: ""
      internalPvc:
        enabled: true
        name: ""
        tilesSubPath: ""
    s3:
      endpointUrl: ""
      tilesBucket: ""
      sslEnabled: false
      secretName: ""
  jobManagement:
    ingestion:
      new: 
        jobType: ""
      update: 
        jobType: ""
      updateSwap:
        jobType: ""
    sync:
      incoming:
        JobType: ""
    exporter:
      JobType: ""

serviceUrls:
  jobManager: ""
  mapproxyApi: ""
storage:
  tilesStorageProvider: ""
  fs:
    ingestionSourcePvc:
      enabled: false
      name: ""
      subPath: ""
    internalPvc:
      enabled: false
      name: ""
      tilesSubPath: ""
  s3:
    endpointUrl: ""
    tilesBucket: ""
    sslEnabled: false
    secretName: ""
jobManagement:
  ingestion:
    new: 
      jobType: ""
    update: 
      jobType: ""
    updateSwap:
      jobType: ""
  sync:
    incoming:
      JobType: ""
  exporter:
    JobType: ""

authentication:
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""

enabled: true
environment: development

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

image:
  repository: discrete-cleanup
  tag: 'latest'

cron:
  schedule:  '0 0 * * *'
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  restartPolicy: OnFailure

# add pod annotations
# example:
# podAnnotations:
  # annotation1: annotation-value-1
  # annotation2: annotation-value-2
podAnnotations:
  annotation1: annotation-value-1
  annotation2: annotation-value-2

env:
  logLevel: info
  logPrettyPrintEnabled: false
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  fs:
    blacklistSourcesLocation:
    - "test_dir"
  s3:
    maxRetries: 3
    apiVersion: 2006-03-01
  batchSize:
    discreteLayers: 10
    tiffDirectoryDeletion: 1
    tilesDeletion: 1000 #s3 default max limit is 10000 so larger batches will be caped to the s3 limit
  failedCleanupDelayDays:
    ingestion: 14
    sync: 14
  httpRetry:
    attempts: 3
    delay: exponential
    shouldResetTimeout: true
  cleanupTypes:
    failedIngestionTasks: true
    successfulIngestion: true
    failedIncomingSyncTasks: true
    successfulSwapUpdate: true

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

# ====================================================================================================
# Local certificate files variables
# ====================================================================================================

local:
  certs:
    ca: "certs/ca.crt"
    ssl: "certs/openssl.cnf"
  s3:
    secret:
      create: false #use for stand alone testing, global s3 secret name should be provided for full deployment
      accessKeyId: ""
      secretAccessKey: ""
  fs:
    sources:
      useEmptyDir: false # for local standalone deployment only
    tiles:
      useEmptyDir: false # for local standalone deployment only

